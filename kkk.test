for line in table_lines:
    fields = line.split()
    tables_names2.append(fields[0])

'''select literal.literal_value, meaning.meaning_value, m_lang.m_lang_value from literal join meaning on meaning.literal_id  = literal.literal_id join m_lang on meaning.m_lang_id = m_lang.m_lang_id where meaning.meaning_value like "%car%";

select literal_value, meaning_value, reading_value from literal left join meaning on literal.literal_id = meaning.literal_id left join reading  on literal.literal_id = reading.literal_id limit 70 ;


sqlite> select literal_value, meaning_value, reading_value,r_type_value from literal left join meaning on literal.literal_id = meaning.literal_id left join reading  on literal.literal_id = reading.literal_id join r_type on reading.r_type_id = r_type.r_type_id where r_type_value = 'ja_on' limit 70 ;


sqlite> select literal_value,  reading_value,r_type_value from literal left join reading  on literal.literal_id = reading.literal_id join r_type on reading.r_type_id = r_type.r_type_id where r_type_value like 'ja_%' group  by r_type_value limit 70 ;
響|ひびく|ja_kun
頻|ヒン|ja_on




select literal.literal_id, literal.literal_value, parts.parts_id from literal,parts where parts.parts_value = literal.literal_value limit 5;
literal_id|literal_value|parts_id
65|衣|39
70|井|43
76|一|2
103|羽|195
105|雨|94


------
select literal.literal_value,meaning.meaning_value, meaning.literal_id,parts.parts_id from literal, meaning,parts where literal.literal_value = parts.parts_value and meaning.literal_id = literal.literal_id and meaning.m_lang_id is null limit 3;
literal_value|meaning_value|literal_id|parts_id
衣|garment|65|39
衣|clothes|65|39
衣|dressing|65|39

create view kmlp as select literal.literal_value as value,meaning.meaning_value as meaning , meaning.literal_id as lid ,parts.parts_id as pis from literal, meaning,parts where literal.literal_value = parts.parts_value and meaning.literal_id = literal.literal_id and meaning.m_lang_id is null;
sqlite> 





yyyyyyyyyyyyyyyyyy


select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning = "foot" limit 5 ;







select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning like "%rice%" INTERSECT select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning = "fire"



select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning = "foot" INTERSECT select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning = "bird" INTERSECT select literal.literal_value from kmlp,literal,k_parts where kmlp.pis = k_parts.parts_id and k_parts.literal_id = literal.literal_id and kmlp.meaning = "gate";
'''
"嘙"
"翅"
"翳"
"聚"
"蘙"
"蠮"
"鼕"
"鼗"

-最


select distinct parts.parts_value from parts,literal,meaning where parts.parts_value = literal.literal_value and literal.literal_id not in (select meaning.literal_id from meaning)


>>> unicodedata.name('刂')
'CJK UNIFIED IDEOGRAPH-5202'
>>> unicodedata.name('⺉')
'CJK RADICAL KNIFE TWO'
>>> unicodedata.name('辶')
'CJK COMPATIBILITY IDEOGRAPH-FA66'
>>> unicodedata.name('⻌')
'CJK RADICAL SIMPLIFIED WALK'


CREATE VIEW kmlp as select literal.literal_value as value,meaning.meaning_value as meaning , meaning.literal_id as lid ,parts.parts_id as pis from literal, meaning,parts where literal.literal_value = parts.parts_value and meaning.literal_id = literal.literal_id and meaning.m_lang_id is null




CREATE VIEW kmlp as select literal.literal_value as value,meaning.meaning_value as meaning , meaning.literal_id as lid ,parts.parts_id as pis from literal, meaning,parts where literal.literal_value = parts.parts_value and meaning.literal_id = literal.literal_id and meaning.m_lang_id is null


CREATE VIEW kmlp as 
select 
literal.literal_value as value,
meaning.meaning_value as meaning, 
meaning.literal_id as lid,
parts.parts_id as pis 
from 
literal, meaning,parts 
where 
literal.literal_value = parts.parts_value 
and 
meaning.literal_id = literal.literal_id 
and 
meaning.m_lang_id is null




select * from literal where literal.literal_id not in (select distinct meaning.literal_id from meaning) and literal.literal_id in (select distinct literal.literal_id from literal,parts where parts.parts_value = literal.literal_value)